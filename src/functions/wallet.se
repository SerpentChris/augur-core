### Contract which holds funds for things like markets, events, and branches in various subcurrencies

extern subcurrency: [allowance:[address,address]:uint256, approve:[address,uint256]:uint256, balanceOf:[address]:uint256, decimals:[]:uint256, name:[]:uint256, symbol:[]:uint256, totalSupply:[]:uint256, transfer:[address,uint256]:uint256, transferFrom:[address,address,uint256]:uint256]

extern controller: [lookup:[int256]:int256, checkWhitelist:[int256]:int256]

inset('../macros/refund.sem')

data currency

data winningOutcomeContract

data controller

def init():
    self.controller = 0x0

def initialize(currency):
    if(!self.currency):
        self.currency = currency
    return(1)

def setWinningOutcomeContractAddressInitialize(currency, addr):
    if(!self.currency):
        self.currency = currency
        self.winningOutcomeContract = addr
    return(1)

def transfer(receiver: address, value: uint256):
    if(msg.sender != self.winningOutcomeContract):
        self.controller.checkWhitelist(msg.sender)
    if(receiver == 0 or value <= 0):
        throw()
    if(!self.currency.transfer(receiver, value)):
        throw()
    return(1)